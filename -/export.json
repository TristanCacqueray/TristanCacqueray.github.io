{"files":{"blog.md":{"filePath":"blog.md","links":[],"meta":{"page":{"description":"My blog articles:"},"tags":[]},"parentNote":"index.md","title":"Blog","url":"blog"},"blog/cabal-project.md":{"filePath":"blog/cabal-project.md","links":[],"meta":{"date":"2022-11-24","page":{"description":"This post shows some strategies one can use to patch an external library."},"tags":["haskell","blog"],"title":"Patching a Haskell build-depends"},"parentNote":"blog.md","title":"Patching a Haskell build-depends","url":"blog/cabal-project"},"blog/dear-imgui.md":{"filePath":"blog/dear-imgui.md","links":[],"meta":{"date":"2022-11-28","page":{"description":"This post introduces the dear-imgui library along with its Haskell binding to create this simple user interface:","image":"../static/dear-imgui-demo.png"},"tags":["haskell","blog"],"title":"Incredibly Magic Graphics User Interface"},"parentNote":"blog.md","title":"Incredibly Magic Graphics User Interface","url":"blog/dear-imgui"},"blog/float-controller.md":{"filePath":"blog/float-controller.md","links":[{"resolvedRelTarget":{"contents":"blog/dear-imgui","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","dear-imgui"],"tag":"URTWikiLink"}}],"meta":{"date":"2022-12-02","page":{"description":"This is a follow-up to [[dear-imgui]]. This post demonstrates how to implement a dear-imgui widget to manipulate arbitrary floating point values."},"tags":["haskell","blog"],"title":"Arbitrary precision float controller"},"parentNote":"blog.md","title":"Arbitrary precision float controller","url":"blog/float-controller"},"blog/functor-map.md":{"filePath":"blog/functor-map.md","links":[{"resolvedRelTarget":{"contents":"zettle/programing-languages/purescript","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","purescript"],"tag":"URTWikiLink"}}],"meta":{"date":"2021-11-17","page":{"description":"This post explores the map function in [[purescript]]. Start a REPL by running these commands in a new directory:"},"tags":["haskell","blog"],"title":"Functor map"},"parentNote":"blog.md","title":"Functor map","url":"blog/functor-map"},"blog/haskell-use-cases.md":{"filePath":"blog/haskell-use-cases.md","links":[],"meta":{"date":"2021-06-01","page":{"description":"This post was initially published on the Software Factory blog: https://www.softwarefactory-project.io/practical-haskell-use-cases.html"},"tags":["blog","monocle"],"title":"Haskell use cases for ChangeMetrics"},"parentNote":"blog.md","title":"Haskell use cases for ChangeMetrics","url":"blog/haskell-use-cases"},"blog/introducing-effects.md":{"filePath":"blog/introducing-effects.md","links":[],"meta":{"date":"2022-09-27","page":{"description":"This post was initially published on https://www.softwarefactory-project.io/introducing-an-effects-system-for-monocle.html"},"tags":["blog","haskell","monocle"],"title":"Introducing an effects system for Monocle"},"parentNote":"blog.md","title":"Introducing an effects system for Monocle","url":"blog/introducing-effects"},"blog/introducing-functional-programming-to-pythonistas.md":{"filePath":"blog/introducing-functional-programming-to-pythonistas.md","links":[],"meta":{"date":"2020-12-31","page":{"description":"This year, I continued my journey through computer science by learning functional programming. I started using functional programming (FP) through emacs lisp, then scheme with the SICP book, until I discovered Haskell, which is arguably the best language to learn FP concepts. There I discovered software designs that provide elegant solutions to some of the problems my team and I are facing."},"tags":["blog"],"title":"Introducing Functional Programming to Pythonistas"},"parentNote":"blog.md","title":"Introducing Functional Programming to Pythonistas","url":"blog/introducing-functional-programming-to-pythonistas"},"blog/kubernetes-resources-update.md":{"filePath":"blog/kubernetes-resources-update.md","links":[],"meta":{"date":"2022-07-15","page":{"description":"This post was initially published on the Software Factory blog: https://www.softwarefactory-project.io/how-to-manually-update-kubernetes-resources.html"},"tags":["blog","kubernetes"],"title":"How to manually update Kubernetes Resources"},"parentNote":"blog.md","title":"How to manually update Kubernetes Resources","url":"blog/kubernetes-resources-update"},"blog/logreduce-rust-part1.md":{"filePath":"blog/logreduce-rust-part1.md","links":[],"meta":{"date":"2022-02-10","page":{"description":"This post was initially published on the Software Factory blog: https://www.softwarefactory-project.io/improving-logreduce-with-rust.html"},"tags":["blog","rust","logreduce"],"title":"Improving logreduce with Rust"},"parentNote":"blog.md","title":"Improving logreduce with Rust","url":"blog/logreduce-rust-part1"},"blog/logreduce-rust-part2.md":{"filePath":"blog/logreduce-rust-part2.md","links":[{"resolvedRelTarget":{"contents":"blog/logreduce-rust-part1","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","logreduce-rust-part1"],"tag":"URTWikiLink"}}],"meta":{"date":"2022-02-25","page":{"description":"This post was initially published on the Software Factory blog: https://www.softwarefactory-project.io/implementing-logreduce-nearest-neighbors-model-in-rust.html"},"tags":["blog","rust","logreduce"],"title":"Implementing logreduce nearest neighbors model in Rust"},"parentNote":"blog.md","title":"Implementing logreduce nearest neighbors model in Rust","url":"blog/logreduce-rust-part2"},"blog/logreduce-rust-part3.md":{"filePath":"blog/logreduce-rust-part3.md","links":[{"resolvedRelTarget":{"contents":"blog/logreduce-rust-part2","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","logreduce-rust-part2"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"blog/logreduce-rust-part1","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","logreduce-rust-part1"],"tag":"URTWikiLink"}}],"meta":{"date":"2022-03-16","page":{"description":"This post was initially published on the Software Factory blog: https://www.softwarefactory-project.io/introducing-the-byteslines-iterator.html"},"tags":["blog","rust","logreduce"],"title":"Introducing the BytesLines iterator"},"parentNote":"blog.md","title":"Introducing the BytesLines iterator","url":"blog/logreduce-rust-part3"},"blog/logreduce-rust-part4.md":{"filePath":"blog/logreduce-rust-part4.md","links":[{"resolvedRelTarget":{"contents":"blog/logreduce-rust-part3","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","logreduce-rust-part3"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"blog/logreduce-rust-part2","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","logreduce-rust-part2"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"blog/logreduce-rust-part1","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","logreduce-rust-part1"],"tag":"URTWikiLink"}}],"meta":{"date":"2022-03-29","page":{"description":"This post was initially published on the Software Factory blog: https://www.softwarefactory-project.io/completing-the-first-release-of-logreduce-rust.html"},"tags":["blog","rust","logreduce"],"title":"Completing the first release of logreduce-rust"},"parentNote":"blog.md","title":"Completing the first release of logreduce-rust","url":"blog/logreduce-rust-part4"},"blog/review-workflow.md":{"filePath":"blog/review-workflow.md","links":[],"meta":{"date":"2022-01-05","page":{"description":"This post was initially published on https://changemetrics.io/posts/2022-01-05-review-workflow.html","image":"../static/workflow-inbox.png"},"tags":["blog"],"title":"Improve your developer workflow with Monocle"},"parentNote":"blog.md","title":"Improve your developer workflow with Monocle","url":"blog/review-workflow"},"blog/servant-oauth.md":{"filePath":"blog/servant-oauth.md","links":[],"meta":{"date":"2021-06-12","page":{"description":"This post was initially published on https://changemetrics.io/posts/2021-06-12-servant-oauth.html","image":"../static/oauth.png"},"tags":["blog"],"title":"Adding OAuth middleware to Servant application"},"parentNote":"blog.md","title":"Adding OAuth middleware to Servant application","url":"blog/servant-oauth"},"blog/sf-on-kubernetes.md":{"filePath":"blog/sf-on-kubernetes.md","links":[],"meta":{"date":"2022-06-08","page":{"description":"This post was initially published on the Software Factory blog: https://www.softwarefactory-project.io/running-software-factory-on-openshift.html"},"tags":["blog","kubernetes"],"title":"Running Software Factory on OpenShift"},"parentNote":"blog.md","title":"Running Software Factory on OpenShift","url":"blog/sf-on-kubernetes"},"blog/state-monad.md":{"filePath":"blog/state-monad.md","links":[{"resolvedRelTarget":{"contents":"zettle/programing-languages/haskell","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","haskell"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"blog/functor-map","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","functor-map"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"blog/functor-map","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","functor-map"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/programing-languages/elixir","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","elixir"],"tag":"URTWikiLink"}}],"meta":{"date":"2022-02-06","page":{"description":"This post explores the state monad in [[haskell]]. Donâ€™t forget to checkout the previous post about [[functor-map]]."},"tags":["haskell","blog"],"title":"State monad"},"parentNote":"blog.md","title":"State monad","url":"blog/state-monad"},"blog/varying-modulation.md":{"filePath":"blog/varying-modulation.md","links":[],"meta":{"date":"2022-11-25","page":{"description":"This post shows how to use the varying library to create modulations. The goal is to define a value that varies over time, for example to react smoothly to an external event."},"tags":["haskell","blog"],"title":"Varying Modulation"},"parentNote":"blog.md","title":"Varying Modulation","url":"blog/varying-modulation"},"blog/vulkan-triangle-winding.md":{"filePath":"blog/vulkan-triangle-winding.md","links":[],"meta":{"date":"2022-11-17","page":{"description":"Trying to reproduce the vkguide using the Haskell engine keid I had a weird bug related to triangle winding. This post shows how a 3d model gets rendered on screen using Vulkan.","image":"https://vkguide.dev/diagrams/monkeyGood.png"},"tags":["vulkan","blog"],"title":"Vulkan triangle winding"},"parentNote":"blog.md","title":"Vulkan triangle winding","url":"blog/vulkan-triangle-winding"},"contributions.md":{"filePath":"contributions.md","links":[{"resolvedRelTarget":{"contents":"zettle/softwares/zuul","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","zuul"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/software-factory","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","software-factory"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"projects","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","projects"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"blog","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","blog"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"I actively maintain these projects:"},"tags":[]},"parentNote":"index.md","title":"Contributions","url":"contributions"},"index.md":{"filePath":"index.md","links":[{"resolvedRelTarget":{"contents":"zettle/software-factory","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","software-factory"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"projects","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","projects"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/programing-languages","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","programing-languages"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/music","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","music"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/free-software","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","free-software"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"contributions","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","contributions"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/continuous-integration","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","continuous-integration"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/computer-graphics","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","computer-graphics"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"blog","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","blog"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"Welcome to my homepage. I am a software engineer working for Red Hat on OpenStack cloud [[continuous-integration]] and the [[software-factory]]."},"tags":[],"title":"Tristan de Cacqueray"},"parentNote":null,"title":"Tristan de Cacqueray","url":""},"projects.md":{"filePath":"projects.md","links":[],"meta":{"tags":[]},"parentNote":"index.md","title":"Projects","url":"projects"},"projects/baduk-trainer.md":{"filePath":"projects/baduk-trainer.md","links":[{"resolvedRelTarget":{"contents":"zettle/runtime/wasm","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","wasm"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/programing-languages/purescript","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","purescript"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"Baduk Trainer is a web application to learn the game of baduk."},"tags":["project"],"title":"Baduk Trainer"},"parentNote":"projects.md","title":"Baduk Trainer","url":"projects/baduk-trainer"},"projects/devenv.md":{"filePath":"projects/devenv.md","links":[{"resolvedRelTarget":{"contents":"zettle/programing-languages","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","programing-languages"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"projects/podenv","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","podenv"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/softwares/emacs","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","emacs"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"devenv is a [[podenv]] subproject. The goal is to provide the best in class developer experience for [[programing-languages]] enthusiast."},"tags":["project"],"title":"devenv"},"parentNote":"projects.md","title":"devenv","url":"projects/devenv"},"projects/hy2glsl.md":{"filePath":"projects/hy2glsl.md","links":[{"resolvedRelTarget":{"contents":"zettle/programing-languages/hy","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","hy"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/programing-languages/glsl","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","glsl"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"hy2glsl is a toy compiler to generate [[glsl]] from [[hy]] expression."},"tags":["project"],"title":"hy2glsl"},"parentNote":"projects.md","title":"hy2glsl","url":"projects/hy2glsl"},"projects/k1s.md":{"filePath":"projects/k1s.md","links":[{"resolvedRelTarget":{"contents":"zettle/softwares/zuul","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","zuul"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/communication-protocols/spdy","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","spdy"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/programing-languages/python","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","python"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/runtime/kubernetes","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","kubernetes"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"k1s is a minimal [[kubernetes]] service to start pod for [[zuul]]."},"tags":["project"],"title":"k1s"},"parentNote":"projects.md","title":"k1s","url":"projects/k1s"},"projects/keid-vkguide.md":{"filePath":"projects/keid-vkguide.md","links":[],"meta":{"page":{"description":"This project implements the https://vkguide.dev using the Haskell engine https://keid.haskell-game.dev/ ."},"tags":["project"],"title":"keid-vkguide"},"parentNote":"projects.md","title":"keid-vkguide","url":"projects/keid-vkguide"},"projects/logreduce.md":{"filePath":"projects/logreduce.md","links":[{"resolvedRelTarget":{"contents":"zettle/programing-languages/python","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","python"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"logreduce extract anomaly from log files using scikit-learn, written in [[python]]."},"tags":["project"],"title":"logreduce"},"parentNote":"projects.md","title":"logreduce","url":"projects/logreduce"},"projects/podenv.md":{"filePath":"projects/podenv.md","links":[{"resolvedRelTarget":{"contents":"zettle/programing-languages/dhall","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","dhall"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"projects/devenv","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","devenv"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"Podenv provides a declarative interface to manage containersâ€™ environment."},"tags":["project"],"title":"podenv"},"parentNote":"projects.md","title":"podenv","url":"projects/podenv"},"projects/re-ansi.md":{"filePath":"projects/re-ansi.md","links":[{"resolvedRelTarget":{"contents":"zettle/softwares/zuul","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","zuul"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"re-ansi parse Ansi code and render HTML element."},"tags":["project"],"title":"re-ansi"},"parentNote":"projects.md","title":"re-ansi","url":"projects/re-ansi"},"projects/restfuzz.md":{"filePath":"projects/restfuzz.md","links":[],"meta":{"page":{"description":"restfuzz is an API tester. It can decode response to extract identifier to call further endpoints."},"tags":["project"],"title":"restfuzz"},"parentNote":"projects.md","title":"restfuzz","url":"projects/restfuzz"},"projects/tbac.md":{"filePath":"projects/tbac.md","links":[{"resolvedRelTarget":{"contents":"zettle/programing-languages/c","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","c"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"A kernel module written in [[c]] to control access based on time, such as working or holiday time."},"tags":["project"],"title":"Timed Based Access Control (TBAC)"},"parentNote":"projects.md","title":"Timed Based Access Control (TBAC)","url":"projects/tbac"},"projects/zuul-results-gerrit-plugin.md":{"filePath":"projects/zuul-results-gerrit-plugin.md","links":[{"resolvedRelTarget":{"contents":"zettle/programing-languages/reason","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","reason"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"zuul-results-gerrit-plugin renders the Zuul result comment in Gerrit UI."},"tags":["project"],"title":"Zuul Results Gerrit Plugin"},"parentNote":"projects.md","title":"Zuul Results Gerrit Plugin","url":"projects/zuul-results-gerrit-plugin"},"talks.md":{"filePath":"talks.md","links":[],"meta":null,"parentNote":"index.md","title":"talks","url":"talks"},"talks/dhall-strong-alternative-to-yaml.md":{"filePath":"talks/dhall-strong-alternative-to-yaml.md","links":[],"meta":{"page":{"description":"% Dhall: A Strong Alternative to YAML % Tristan de Cacqueray % Februrary 18, 2021","image":"https://dhall-lang.org/img/dhall-large-logo.svg"},"tags":[]},"parentNote":"talks.md","title":"dhall-strong-alternative-to-yaml","url":"talks/dhall-strong-alternative-to-yaml"},"zettle.md":{"filePath":"zettle.md","links":[],"meta":{"page":{"description":"My notes."},"tags":[]},"parentNote":"index.md","title":"Zettle","url":"zettle"},"zettle/README.md":{"filePath":"zettle/README.md","links":[],"meta":{"page":{"description":"The method I am using for my website <index> Feel free to propose changes by clicking the edit button at the top of any page."},"tags":[]},"parentNote":"zettle.md","title":"Neuron Zettelkasten","url":"zettle/README"},"zettle/code-review.md":{"filePath":"zettle/code-review.md","links":[{"resolvedRelTarget":{"contents":"zettle/softwares/gerrit","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","gerrit"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"Code review (sometimes referred to as peer review) is a software quality assurance activity."},"tags":[]},"parentNote":"zettle.md","title":"Code Review","url":"zettle/code-review"},"zettle/communication-protocols.md":{"filePath":"zettle/communication-protocols.md","links":[],"meta":{"page":{"description":"A communication protocol is a system of rules that allow two or more entities of a communications system to transmit information."},"tags":[]},"parentNote":"zettle.md","title":"Communication Protocol","url":"zettle/communication-protocols"},"zettle/communication-protocols/REST.md":{"filePath":"zettle/communication-protocols/REST.md","links":[],"meta":{"page":{"description":"Representational state transfer, it is used to create web services."},"tags":[]},"parentNote":"zettle/communication-protocols.md","title":"REST","url":"zettle/communication-protocols/REST"},"zettle/communication-protocols/spdy.md":{"filePath":"zettle/communication-protocols/spdy.md","links":[{"resolvedRelTarget":{"contents":"zettle/programing-languages/python","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","python"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"projects/k1s","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","k1s"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"SPDY is a deprecated open-specification networking protocol that was developed primarily at Google for transporting web content."},"tags":[]},"parentNote":"zettle/communication-protocols.md","title":"SPDY","url":"zettle/communication-protocols/spdy"},"zettle/computer-graphics.md":{"filePath":"zettle/computer-graphics.md","links":[{"resolvedRelTarget":{"contents":"zettle/vulkan","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","vulkan"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"projects/hy2glsl","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","hy2glsl"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/fractal","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","fractal"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"Computer graphics is the branch of computer science that deals with generating images with the aid of computers.","image":"https://raw.githubusercontent.com/TristanCacqueray/demo-render/master/animations/rokano.png"},"tags":[]},"parentNote":"zettle.md","title":"Computer Graphics","url":"zettle/computer-graphics"},"zettle/container.md":{"filePath":"zettle/container.md","links":[{"resolvedRelTarget":{"contents":"zettle/systemd-nspawn","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","systemd-nspawn"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"OS-level virtualization is an operating system paradigm in which the kernel allows the existence of multiple isolated user space instances."},"tags":[]},"parentNote":"zettle.md","title":"Container","url":"zettle/container"},"zettle/context-free-art.md":{"filePath":"zettle/context-free-art.md","links":[],"meta":{"page":{"description":"Context Free is a program that generates images from written instructions called a grammar: Context Free Art"},"tags":["pl","procedural"],"title":"Context Free"},"parentNote":"zettle.md","title":"Context Free","url":"zettle/context-free-art"},"zettle/continuous-integration.md":{"filePath":"zettle/continuous-integration.md","links":[{"resolvedRelTarget":{"contents":"zettle/softwares/zuul","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkBranch","zuul"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"In software engineering, continuous integration (CI) is the practice of merging all developersâ€™ working copies to a shared mainline several times a day: wikipedia article."},"tags":[]},"parentNote":"zettle.md","title":"Continuous Integration","url":"zettle/continuous-integration"},"zettle/fractal-animation.md":{"filePath":"zettle/fractal-animation.md","links":[{"resolvedRelTarget":{"contents":"zettle/fractal","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","fractal"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/context-free-art","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","context-free-art"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"Programs that render and animate [[fractal]] object:"},"tags":["project"],"title":"Fractal Animation"},"parentNote":"zettle.md","title":"Fractal Animation","url":"zettle/fractal-animation"},"zettle/fractal.md":{"filePath":"zettle/fractal.md","links":[{"resolvedRelTarget":{"contents":"zettle/fractal-animation","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","fractal-animation"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"I wrote some projects to do [[fractal-animation]].","image":"https://raw.githubusercontent.com/TristanCacqueray/demo-render/master/animations/oldchords-2.png"},"tags":[]},"parentNote":"zettle.md","title":"Fractal","url":"zettle/fractal"},"zettle/free-software.md":{"filePath":"zettle/free-software.md","links":[{"resolvedRelTarget":{"contents":"zettle/softwares/emacs","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","emacs"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"Free Software is computer software distributed under terms that allow users to run the software for any purpose as well as to study, change, and distribute it and any adapted versions: wikipedia article."},"tags":[]},"parentNote":"zettle.md","title":"Free Software","url":"zettle/free-software"},"zettle/geometry.md":{"filePath":"zettle/geometry.md","links":[],"meta":{"tags":[]},"parentNote":"zettle.md","title":"Geometry","url":"zettle/geometry"},"zettle/mathemathics.md":{"filePath":"zettle/mathemathics.md","links":[],"meta":null,"parentNote":"zettle.md","title":"mathemathics","url":"zettle/mathemathics"},"zettle/mathemathics/abstract-algebra.md":{"filePath":"zettle/mathemathics/abstract-algebra.md","links":[{"resolvedRelTarget":{"contents":"zettle/programing-languages/haskell","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","haskell"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"A group is defined by:"},"tags":[]},"parentNote":"zettle/mathemathics.md","title":"Abstract Algebra","url":"zettle/mathemathics/abstract-algebra"},"zettle/mathemathics/boolean-algebra.md":{"filePath":"zettle/mathemathics/boolean-algebra.md","links":[],"meta":{"page":{"description":"De Morganâ€™s laws"},"tags":[]},"parentNote":"zettle/mathemathics.md","title":"Boolean Algebra","url":"zettle/mathemathics/boolean-algebra"},"zettle/mathemathics/lambda-calculus.md":{"filePath":"zettle/mathemathics/lambda-calculus.md","links":[{"resolvedRelTarget":{"contents":"zettle/mockingbird","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","mockingbird"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"This document is a literate haskell file."},"tags":[]},"parentNote":"zettle/mathemathics.md","title":"Lambda Calculus","url":"zettle/mathemathics/lambda-calculus"},"zettle/mathemathics/linear-algebra.md":{"filePath":"zettle/mathemathics/linear-algebra.md","links":[],"meta":{"page":{"description":"From No Bullshit Guide to Linear Algebra by Ivan Savov."},"tags":[]},"parentNote":"zettle/mathemathics.md","title":"Linear Algebra","url":"zettle/mathemathics/linear-algebra"},"zettle/mathematics.md":{"filePath":"zettle/mathematics.md","links":[{"resolvedRelTarget":{"contents":"zettle/mathemathics/linear-algebra","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","linear-algebra"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/mathemathics/lambda-calculus","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","lambda-calculus"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/geometry","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","geometry"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/programing-languages/category-theory","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","category-theory"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/mathemathics/boolean-algebra","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","boolean-algebra"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/mathemathics/abstract-algebra","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","abstract-algebra"],"tag":"URTWikiLink"}}],"meta":{"tags":[]},"parentNote":"zettle.md","title":"Mathemathics","url":"zettle/mathematics"},"zettle/mockingbird.md":{"filePath":"zettle/mockingbird.md","links":[],"meta":{"page":{"description":"A lambda calculus / combinatory explaination."},"tags":[]},"parentNote":"zettle.md","title":"Mockingbird","url":"zettle/mockingbird"},"zettle/music.md":{"filePath":"zettle/music.md","links":[],"meta":{"tags":[]},"parentNote":"zettle.md","title":"Music","url":"zettle/music"},"zettle/music/acid-jazz.md":{"filePath":"zettle/music/acid-jazz.md","links":[],"meta":{"page":{"description":"At Dâ™­ Major, Bâ™­ Minor:"},"tages":["music-genre"],"tags":[],"title":"Acid Jazz"},"parentNote":"zettle/music.md","title":"Acid Jazz","url":"zettle/music/acid-jazz"},"zettle/music/daw.md":{"filePath":"zettle/music/daw.md","links":[{"resolvedRelTarget":{"contents":"zettle/music/reaper","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkBranch","reaper"],"tag":"URTWikiLink"}}],"meta":{"tags":[]},"parentNote":"zettle/music.md","title":"DAW","url":"zettle/music/daw"},"zettle/music/electronic-music.md":{"filePath":"zettle/music/electronic-music.md","links":[],"meta":{"page":{"description":"References: A Mostly Thorough Guide to Learning Electronic Music Production"},"tags":[]},"parentNote":"zettle/music.md","title":"Electronic Music","url":"zettle/music/electronic-music"},"zettle/music/piano.md":{"filePath":"zettle/music/piano.md","links":[],"meta":{"tags":[]},"parentNote":"zettle/music.md","title":"Piano","url":"zettle/music/piano"},"zettle/music/reaper.md":{"filePath":"zettle/music/reaper.md","links":[],"meta":{"tags":[]},"parentNote":"zettle/music.md","title":"Reaper","url":"zettle/music/reaper"},"zettle/music/sound-engineering.md":{"filePath":"zettle/music/sound-engineering.md","links":[],"meta":{"page":{"description":"Here are my notes from Dan Worrall tutorials."},"tags":[]},"parentNote":"zettle/music.md","title":"Sound Engineering","url":"zettle/music/sound-engineering"},"zettle/music/trip-hop.md":{"filePath":"zettle/music/trip-hop.md","links":[],"meta":{"tags":[]},"parentNote":"zettle/music.md","title":"Trip Hop","url":"zettle/music/trip-hop"},"zettle/object-oriented-programing.md":{"filePath":"zettle/object-oriented-programing.md","links":[{"resolvedRelTarget":{"contents":"zettle/programing-languages/imperative-programing","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","imperative-programing"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"An [[imperative-programing]] paradigm based on the concept of objects."},"tags":[]},"parentNote":"zettle.md","title":"Object Oriented Programing","url":"zettle/object-oriented-programing"},"zettle/programing-languages.md":{"filePath":"zettle/programing-languages.md","links":[{"resolvedRelTarget":{"contents":"zettle/programing-languages/type-system","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","type-system"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/programing-languages/structured-programing","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","structured-programing"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/programing-languages/modular-programing","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","modular-programing"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/programing-languages/imperative-programing","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","imperative-programing"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/programing-languages/declarative-programing","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","declarative-programing"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"Language paradigms includes:"},"tags":[]},"parentNote":"zettle.md","title":"Programing Languages","url":"zettle/programing-languages"},"zettle/programing-languages/HM.md":{"filePath":"zettle/programing-languages/HM.md","links":[],"meta":{"page":{"description":"HM is proven to be complete and able to infer the most general type of a given program: wikipedia article."},"tags":[]},"parentNote":"zettle/programing-languages.md","title":"Hindleyâ€“Milner type system","url":"zettle/programing-languages/HM"},"zettle/programing-languages/LISP.md":{"filePath":"zettle/programing-languages/LISP.md","links":[{"resolvedRelTarget":{"contents":"zettle/programing-languages/sexp","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","sexp"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"A family of progaming languages designed by John McCarthy in 1958."},"tags":[]},"parentNote":"zettle/programing-languages.md","title":"LISP","url":"zettle/programing-languages/LISP"},"zettle/programing-languages/ML.md":{"filePath":"zettle/programing-languages/ML.md","links":[{"resolvedRelTarget":{"contents":"zettle/programing-languages/HM","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkTag","HM"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/programing-languages/functional-programing","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","functional-programing"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"[[functional-programing]] language designed by Robin Milner in 1973."},"tags":["pl","functional"],"title":"ML"},"parentNote":"zettle/programing-languages.md","title":"ML","url":"zettle/programing-languages/ML"},"zettle/programing-languages/agda.md":{"filePath":"zettle/programing-languages/agda.md","links":[],"meta":{"page":{"description":"Agda is a dependently typed functional programming language as well as a proof assistant."},"tags":["pl","proof","functional/pure"],"title":"Agda"},"parentNote":"zettle/programing-languages.md","title":"Agda","url":"zettle/programing-languages/agda"},"zettle/programing-languages/ats.md":{"filePath":"zettle/programing-languages/ats.md","links":[{"resolvedRelTarget":{"contents":"zettle/programing-languages/linearly-typed","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkTag","linearly-typed"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/programing-languages/dependently-typed","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkTag","dependently-typed"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/programing-languages/javascript","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","javascript"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/programing-languages/c","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","c"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"ATS (Applied Type System) is a programming language designed to unify programming with formal specification."},"tags":["pl","proof","functional"],"title":"ATS"},"parentNote":"zettle/programing-languages.md","title":"ATS","url":"zettle/programing-languages/ats"},"zettle/programing-languages/c.md":{"filePath":"zettle/programing-languages/c.md","links":[{"resolvedRelTarget":{"contents":"zettle/programing-languages/procedural-programing","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","procedural-programing"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/programing-languages/garbage-collection","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","garbage-collection"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"A general-purpose, [[procedural-programing]] language. It does not include [[garbage-collection]]."},"tags":["pl","procedural"],"title":"C"},"parentNote":"zettle/programing-languages.md","title":"C","url":"zettle/programing-languages/c"},"zettle/programing-languages/category-theory.md":{"filePath":"zettle/programing-languages/category-theory.md","links":[],"meta":{"tags":[]},"parentNote":"zettle/programing-languages.md","title":"Category Theory","url":"zettle/programing-languages/category-theory"},"zettle/programing-languages/clean.md":{"filePath":"zettle/programing-languages/clean.md","links":[],"meta":{"page":{"description":"There is a functional language capable of auto-generating input forms: Clean https://clean.cs.ru.nl/Clean with the iTask library on top."},"tags":["pl","hm","functional/pure"],"title":"clean"},"parentNote":"zettle/programing-languages.md","title":"clean","url":"zettle/programing-languages/clean"},"zettle/programing-languages/computer-graphic.md":{"filePath":"zettle/programing-languages/computer-graphic.md","links":[{"resolvedRelTarget":{"contents":"zettle/programing-languages/glsl","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","glsl"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/context-free-art","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","context-free-art"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/computer-graphics","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","computer-graphics"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"Special purpose programing language to display [[computer-graphics]]."},"tags":[]},"parentNote":"zettle/programing-languages.md","title":"Computer Graphic","url":"zettle/programing-languages/computer-graphic"},"zettle/programing-languages/coq.md":{"filePath":"zettle/programing-languages/coq.md","links":[],"meta":{"page":{"description":"Coq is an interactive theorem prover first released in 1989."},"tags":["pl","dependent-type","proof"],"title":"Coq"},"parentNote":"zettle/programing-languages.md","title":"Coq","url":"zettle/programing-languages/coq"},"zettle/programing-languages/css.md":{"filePath":"zettle/programing-languages/css.md","links":[],"meta":{"page":{"description":"https://css-tricks.com/snippets/css/a-guide-to-flexbox/"},"tags":[]},"parentNote":"zettle/programing-languages.md","title":"CSS","url":"zettle/programing-languages/css"},"zettle/programing-languages/declarative-programing.md":{"filePath":"zettle/programing-languages/declarative-programing.md","links":[{"resolvedRelTarget":{"contents":"zettle/programing-languages/functional-programing","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkTag","functional-programing"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/programing-languages","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","programing-languages"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/programing-languages/imperative-programing","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","imperative-programing"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"A [[programing-languages]] paradigm that expresses the logic of a computation without describing its control flow. Contrast with [[imperative-programing]]."},"tags":[]},"parentNote":"zettle/programing-languages.md","title":"Declarative Programing","url":"zettle/programing-languages/declarative-programing"},"zettle/programing-languages/dependently-typed.md":{"filePath":"zettle/programing-languages/dependently-typed.md","links":[],"meta":{"page":{"description":"Dependent types may help reduce bugs by enabling the programmer to assign types that further restrain the set of possible implementations."},"tags":[]},"parentNote":"zettle/programing-languages.md","title":"Dependently Typed","url":"zettle/programing-languages/dependently-typed"},"zettle/programing-languages/dhall.md":{"filePath":"zettle/programing-languages/dhall.md","links":[{"resolvedRelTarget":{"contents":"projects/podenv","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","podenv"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"Dhall is a programmable configuration language that you can think of as: JSON + functions + types + imports. It advertises the absence of Turing-completeness: see this blog post."},"tags":["pl","functional/pure"],"title":"Dhall"},"parentNote":"zettle/programing-languages.md","title":"Dhall","url":"zettle/programing-languages/dhall"},"zettle/programing-languages/elixir.md":{"filePath":"zettle/programing-languages/elixir.md","links":[{"resolvedRelTarget":{"contents":"zettle/runtime/BEAM","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","BEAM"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"Elixir is a dynamic, functional language designed for building scalable and maintainable applications."},"tags":["pl","functional","beam"],"title":"Elixir"},"parentNote":"zettle/programing-languages.md","title":"Elixir","url":"zettle/programing-languages/elixir"},"zettle/programing-languages/elm.md":{"filePath":"zettle/programing-languages/elm.md","links":[],"meta":{"page":{"description":"Elm is a delightful language with no runtime exceptions."},"tags":["pl","functional/pure"],"title":"Elm"},"parentNote":"zettle/programing-languages.md","title":"Elm","url":"zettle/programing-languages/elm"},"zettle/programing-languages/emacs-lisp.md":{"filePath":"zettle/programing-languages/emacs-lisp.md","links":[{"resolvedRelTarget":{"contents":"zettle/softwares/emacs","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","emacs"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/programing-languages/LISP","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","LISP"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"Emacs Lisp is a dialect of the [[LISP]] programming language family used as a scripting language by [[emacs]]."},"tags":["pl","lisp"],"title":"Emacs Lisp"},"parentNote":"zettle/programing-languages.md","title":"Emacs Lisp","url":"zettle/programing-languages/emacs-lisp"},"zettle/programing-languages/functional-programing.md":{"filePath":"zettle/programing-languages/functional-programing.md","links":[{"resolvedRelTarget":{"contents":"zettle/programing-languages/purely-functional","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkBranch","purely-functional"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/programing-languages/LISP","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkBranch","LISP"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"Why I prefer functional programming."},"tags":[]},"parentNote":"zettle/programing-languages.md","title":"Functional Programing","url":"zettle/programing-languages/functional-programing"},"zettle/programing-languages/garbage-collection.md":{"filePath":"zettle/programing-languages/garbage-collection.md","links":[{"resolvedRelTarget":{"contents":"zettle/programing-languages/rust","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","rust"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/programing-languages/c","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","c"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"It is a form of automatic memory management and often required for high level language."},"tags":[]},"parentNote":"zettle/programing-languages.md","title":"Garbage Collection","url":"zettle/programing-languages/garbage-collection"},"zettle/programing-languages/gleam.md":{"filePath":"zettle/programing-languages/gleam.md","links":[{"resolvedRelTarget":{"contents":"zettle/runtime/BEAM","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","BEAM"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"Gleam is a fast, friendly, and functional language for building safe, scalable systems on top of the [[BEAM]]."},"tags":["pl","beam","functional"],"title":"Gleam"},"parentNote":"zettle/programing-languages.md","title":"Gleam","url":"zettle/programing-languages/gleam"},"zettle/programing-languages/glsl.md":{"filePath":"zettle/programing-languages/glsl.md","links":[{"resolvedRelTarget":{"contents":"zettle/programing-languages/procedural-programing","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","procedural-programing"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/programing-languages/c","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","c"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"OpenGL Shading Language (GLSL) is a high-level shading [[procedural-programing]] language with a syntax based on the [[c]] programming language."},"tags":["pl","procedural"],"title":"GLSL"},"parentNote":"zettle/programing-languages.md","title":"GLSL","url":"zettle/programing-languages/glsl"},"zettle/programing-languages/haskell.md":{"filePath":"zettle/programing-languages/haskell.md","links":[{"resolvedRelTarget":{"contents":"zettle/zurihac","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkBranch","zurihac"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"Given a program Foo.hs:"},"tags":["pl","hm","functional/pure"],"title":"Haskell"},"parentNote":"zettle/programing-languages.md","title":"Haskell","url":"zettle/programing-languages/haskell"},"zettle/programing-languages/html.md":{"filePath":"zettle/programing-languages/html.md","links":[{"resolvedRelTarget":{"contents":"zettle/shadow-dom","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkBranch","shadow-dom"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/programing-languages/css","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkBranch","css"],"tag":"URTWikiLink"}}],"meta":{"tags":[],"title":"HTML"},"parentNote":"zettle/programing-languages.md","title":"HTML","url":"zettle/programing-languages/html"},"zettle/programing-languages/hy.md":{"filePath":"zettle/programing-languages/hy.md","links":[{"resolvedRelTarget":{"contents":"zettle/programing-languages/glsl","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","glsl"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/programing-languages/LISP","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","LISP"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"Hy is a dialect of [[LISP]] thatâ€™s embedded in Python."},"tags":["pl","lisp"],"title":"Hy"},"parentNote":"zettle/programing-languages.md","title":"Hy","url":"zettle/programing-languages/hy"},"zettle/programing-languages/idris.md":{"filePath":"zettle/programing-languages/idris.md","links":[{"resolvedRelTarget":{"contents":"zettle/programing-languages/scheme","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","scheme"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"Idris is a programming language designed to encourage Type-Driven Development."},"tags":["pl","functional/pure","dependent-type"],"title":"Idris"},"parentNote":"zettle/programing-languages.md","title":"Idris","url":"zettle/programing-languages/idris"},"zettle/programing-languages/imperative-programing.md":{"filePath":"zettle/programing-languages/imperative-programing.md","links":[{"resolvedRelTarget":{"contents":"zettle/programing-languages/procedural-programing","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkBranch","procedural-programing"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/object-oriented-programing","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkBranch","object-oriented-programing"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/programing-languages","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","programing-languages"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/programing-languages/declarative-programing","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","declarative-programing"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"A [[programing-languages]] paradigm that uses statements to change a programâ€™s state. Contrast with [[declarative-programing]]."},"tags":[]},"parentNote":"zettle/programing-languages.md","title":"Imperative Programing","url":"zettle/programing-languages/imperative-programing"},"zettle/programing-languages/javascript.md":{"filePath":"zettle/programing-languages/javascript.md","links":[],"meta":{"page":{"description":"JavaScript is specified by the tc39 group."},"tags":["pl","functional"],"title":"JavaScript"},"parentNote":"zettle/programing-languages.md","title":"JavaScript","url":"zettle/programing-languages/javascript"},"zettle/programing-languages/linearly-typed.md":{"filePath":"zettle/programing-languages/linearly-typed.md","links":[],"meta":{"page":{"description":"Linear system enables keeping track of resources, for example to ensure they are released."},"tags":[]},"parentNote":"zettle/programing-languages.md","title":"Linearly Typed","url":"zettle/programing-languages/linearly-typed"},"zettle/programing-languages/modular-programing.md":{"filePath":"zettle/programing-languages/modular-programing.md","links":[{"resolvedRelTarget":{"contents":"zettle/programing-languages/ML","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkBranch","ML"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"A programing language paradigm that separates the functionality of a program into independent, interchangeable modules."},"tags":[]},"parentNote":"zettle/programing-languages.md","title":"Modular Pograming","url":"zettle/programing-languages/modular-programing"},"zettle/programing-languages/monad.md":{"filePath":"zettle/programing-languages/monad.md","links":[],"meta":{"page":{"description":"Reference: Monads for functional programming"},"tags":[]},"parentNote":"zettle/programing-languages.md","title":"Monad","url":"zettle/programing-languages/monad"},"zettle/programing-languages/nix.md":{"filePath":"zettle/programing-languages/nix.md","links":[{"resolvedRelTarget":{"contents":"zettle/programing-languages/purely-functional","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","purely-functional"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"projects/devenv","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","devenv"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"nix is a [[purely-functional]] expression language."},"tags":["pl","functional/pure"],"title":"Nix"},"parentNote":"zettle/programing-languages.md","title":"Nix","url":"zettle/programing-languages/nix"},"zettle/programing-languages/ocaml.md":{"filePath":"zettle/programing-languages/ocaml.md","links":[{"resolvedRelTarget":{"contents":"zettle/programing-languages/ML","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","ML"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"OCaml is an industrial-strength programming language supporting functional, imperative and object-oriented styles based on [[ML]]."},"tags":["pl","ml","hm"],"title":"OCaml"},"parentNote":"zettle/programing-languages.md","title":"OCaml","url":"zettle/programing-languages/ocaml"},"zettle/programing-languages/procedural-programing.md":{"filePath":"zettle/programing-languages/procedural-programing.md","links":[{"resolvedRelTarget":{"contents":"zettle/programing-languages/imperative-programing","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","imperative-programing"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"An [[imperative-programing]] paradigm using procedures, that simply contain a series of computational steps to be carried out."},"tags":[]},"parentNote":"zettle/programing-languages.md","title":"Procedural Programing","url":"zettle/programing-languages/procedural-programing"},"zettle/programing-languages/purely-functional.md":{"filePath":"zettle/programing-languages/purely-functional.md","links":[{"resolvedRelTarget":{"contents":"zettle/programing-languages/functional-programing","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","functional-programing"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"A purely [[functional-programing]] language treats all computation as the evaluation of mathematical functions. It may also be defined by forbidding state changes and mutable data."},"tags":[]},"parentNote":"zettle/programing-languages.md","title":"Purely Functional","url":"zettle/programing-languages/purely-functional"},"zettle/programing-languages/purescript.md":{"filePath":"zettle/programing-languages/purescript.md","links":[{"resolvedRelTarget":{"contents":"zettle/programing-languages/python","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","python"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/runtime/BEAM","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","BEAM"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"Purescript is a strongly-typed functional programming language that compiles to JavaScript."},"tags":["pl","functional/pure"],"title":"Purescript"},"parentNote":"zettle/programing-languages.md","title":"Purescript","url":"zettle/programing-languages/purescript"},"zettle/programing-languages/python.md":{"filePath":"zettle/programing-languages/python.md","links":[],"meta":{"page":{"description":"Python is a programming language that lets you work quickly and integrate systems more effectively."},"tags":["pl","functional"],"title":"Python"},"parentNote":"zettle/programing-languages.md","title":"Python","url":"zettle/programing-languages/python"},"zettle/programing-languages/reactjs.md":{"filePath":"zettle/programing-languages/reactjs.md","links":[{"resolvedRelTarget":{"contents":"zettle/programing-languages/javascript","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","javascript"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/programing-languages/html","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","html"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"A javascript framework to create user interface."},"tags":[]},"parentNote":"zettle/programing-languages.md","title":"ReactJS","url":"zettle/programing-languages/reactjs"},"zettle/programing-languages/reason.md":{"filePath":"zettle/programing-languages/reason.md","links":[{"resolvedRelTarget":{"contents":"zettle/programing-languages/rescript","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","rescript"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/programing-languages/ocaml","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","ocaml"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"ReasonML lets you write simple, fast and quality type safe code while leveraging both the JavaScript & OCaml ecosystems. It is an [[ocaml]] syntax that is similar to JSX. It compiles to javascript using the [[rescript]] compiler."},"tags":["pl","ml"],"title":"Reason"},"parentNote":"zettle/programing-languages.md","title":"Reason","url":"zettle/programing-languages/reason"},"zettle/programing-languages/rescript.md":{"filePath":"zettle/programing-languages/rescript.md","links":[{"resolvedRelTarget":{"contents":"projects/re-ansi","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","re-ansi"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"ReScript, the JavaScript-like language you have been waiting for."},"tags":["pl","ml"],"title":"ReScript"},"parentNote":"zettle/programing-languages.md","title":"ReScript","url":"zettle/programing-languages/rescript"},"zettle/programing-languages/rust.md":{"filePath":"zettle/programing-languages/rust.md","links":[{"resolvedRelTarget":{"contents":"zettle/python-dhall","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","python-dhall"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"Rust is a language empowering everyone to build reliable and efficient software."},"tags":["pl","functional","imperative"],"title":"Rust"},"parentNote":"zettle/programing-languages.md","title":"Rust","url":"zettle/programing-languages/rust"},"zettle/programing-languages/scheme.md":{"filePath":"zettle/programing-languages/scheme.md","links":[{"resolvedRelTarget":{"contents":"zettle/programing-languages/LISP","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","LISP"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"Scheme is a minimalist dialect of the [[LISP]] family."},"tags":["pl","lisp"],"title":"Scheme"},"parentNote":"zettle/programing-languages.md","title":"Scheme","url":"zettle/programing-languages/scheme"},"zettle/programing-languages/sexp.md":{"filePath":"zettle/programing-languages/sexp.md","links":[],"meta":{"page":{"description":"S-expression (or symbolic expression, abbreviated as sexp) is a notation for nested list (tree-structured) data."},"tags":[]},"parentNote":"zettle/programing-languages.md","title":"S-expression","url":"zettle/programing-languages/sexp"},"zettle/programing-languages/structured-programing.md":{"filePath":"zettle/programing-languages/structured-programing.md","links":[{"resolvedRelTarget":{"contents":"zettle/programing-languages/python","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkBranch","python"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/programing-languages/c","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkBranch","c"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/programing-languages","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","programing-languages"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"A [[programing-languages]] paradigm emerged in the late 1950s with ALGOL, this paradigm introduced:"},"tags":[]},"parentNote":"zettle/programing-languages.md","title":"Structured Programing","url":"zettle/programing-languages/structured-programing"},"zettle/programing-languages/type-system.md":{"filePath":"zettle/programing-languages/type-system.md","links":[{"resolvedRelTarget":{"contents":"zettle/programing-languages/linearly-typed","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkBranch","linearly-typed"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/programing-languages/dependently-typed","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkBranch","dependently-typed"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/programing-languages/HM","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkBranch","HM"],"tag":"URTWikiLink"}}],"meta":{"tags":[]},"parentNote":"zettle/programing-languages.md","title":"Type System","url":"zettle/programing-languages/type-system"},"zettle/python-dhall.md":{"filePath":"zettle/python-dhall.md","links":[{"resolvedRelTarget":{"contents":"zettle/programing-languages/rust","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","rust"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/programing-languages/dhall","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","dhall"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"python-dhall is a python binding for [[dhall]] using the dhall-rust implementation."},"tags":["project","rust"],"title":"python-dhall"},"parentNote":"zettle.md","title":"python-dhall","url":"zettle/python-dhall"},"zettle/runtime.md":{"filePath":"zettle/runtime.md","links":[{"resolvedRelTarget":{"contents":"zettle/runtime/wasm","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkBranch","wasm"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/runtime/kubernetes","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkBranch","kubernetes"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/programing-languages/garbage-collection","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkBranch","garbage-collection"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/runtime/BEAM","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkBranch","BEAM"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"A runtime may performs [[garbage-collection]]."},"tags":[]},"parentNote":"zettle.md","title":"Runtime","url":"zettle/runtime"},"zettle/runtime/BEAM.md":{"filePath":"zettle/runtime/BEAM.md","links":[],"meta":{"page":{"description":"BEAM is the virtual machine at the core of the Erlang Open Telecom Platform (OTP)."},"tags":[]},"parentNote":"zettle/runtime.md","title":"BEAM","url":"zettle/runtime/BEAM"},"zettle/runtime/kubernetes.md":{"filePath":"zettle/runtime/kubernetes.md","links":[{"resolvedRelTarget":{"contents":"zettle/runtime/openshift","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkBranch","openshift"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"Kubernetes (commonly stylized as k8s[4]) is an open-source container-orchestration system for automating computer application deployment, scaling, and management."},"tags":[]},"parentNote":"zettle/runtime.md","title":"Kubernetes","url":"zettle/runtime/kubernetes"},"zettle/runtime/openshift.md":{"filePath":"zettle/runtime/openshift.md","links":[{"resolvedRelTarget":{"contents":"zettle/programing-languages/dhall","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","dhall"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"OpenShift is a family of containerization software products developed by Red Hat."},"tags":[]},"parentNote":"zettle/runtime.md","title":"OpenShift","url":"zettle/runtime/openshift"},"zettle/runtime/wasm.md":{"filePath":"zettle/runtime/wasm.md","links":[],"meta":{"page":{"description":"WASM is an open standard that defines a portable binary-code."},"tags":[]},"parentNote":"zettle/runtime.md","title":"Web Assembly","url":"zettle/runtime/wasm"},"zettle/shadow-dom.md":{"filePath":"zettle/shadow-dom.md","links":[{"resolvedRelTarget":{"contents":"zettle/programing-languages/javascript","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","javascript"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"Shadow DOM is a functionality that allows the web browser to render DOM elements without putting them into the main document DOM tree."},"tags":[]},"parentNote":"zettle.md","title":"Shadow Dom","url":"zettle/shadow-dom"},"zettle/software-development-forge.md":{"filePath":"zettle/software-development-forge.md","links":[],"meta":{"tags":[]},"parentNote":"zettle.md","title":"Software Development Forge","url":"zettle/software-development-forge"},"zettle/software-factory.md":{"filePath":"zettle/software-factory.md","links":[{"resolvedRelTarget":{"contents":"zettle/continuous-integration","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","continuous-integration"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/code-review","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","code-review"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"Software Factory is a software development forge. The project integrates a [[code-review]], [[continuous-integration]] and collaborative system. It features an easy-to-use configuration system to setup all the services."},"tags":[],"title":"Software Factory Project"},"parentNote":"zettle.md","title":"Software Factory Project","url":"zettle/software-factory"},"zettle/softwares.md":{"filePath":"zettle/softwares.md","links":[{"resolvedRelTarget":{"contents":"zettle/version-control","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkBranch","version-control"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/user-interface","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkBranch","user-interface"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/software-development-forge","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkBranch","software-development-forge"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/music/daw","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkBranch","daw"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/continuous-integration","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkBranch","continuous-integration"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/container","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkBranch","container"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/code-review","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkBranch","code-review"],"tag":"URTWikiLink"}}],"meta":{"tags":[]},"parentNote":"zettle.md","title":"Softwares","url":"zettle/softwares"},"zettle/softwares/emacs.md":{"filePath":"zettle/softwares/emacs.md","links":[{"resolvedRelTarget":{"contents":"zettle/programing-languages/emacs-lisp","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkBranch","emacs-lisp"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/softwares/git","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","git"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"zettle/free-software","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","free-software"],"tag":"URTWikiLink"}},{"resolvedRelTarget":{"contents":"projects/devenv","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","devenv"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"Emacs is among the oldest [[free-software]] still under development. It is programmable with [[emacs-lisp]]."},"tags":[]},"parentNote":"zettle/softwares.md","title":"Emacs","url":"zettle/softwares/emacs"},"zettle/softwares/gerrit.md":{"filePath":"zettle/softwares/gerrit.md","links":[{"resolvedRelTarget":{"contents":"zettle/softwares/git","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","git"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"Gerrit features a [[git]] based patchset system. The unit of review and contributions are single commit which can be proposed indepently, as opposed to Pull Request or Merge Request which are bound to a single branch."},"tags":[]},"parentNote":"zettle/softwares.md","title":"gerrit","url":"zettle/softwares/gerrit"},"zettle/softwares/git.md":{"filePath":"zettle/softwares/git.md","links":[{"resolvedRelTarget":{"contents":"zettle/softwares/emacs","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","emacs"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"Git is a distributed version-control system for tracking changes in source code during software development."},"tags":[]},"parentNote":"zettle/softwares.md","title":"git","url":"zettle/softwares/git"},"zettle/softwares/zuul.md":{"filePath":"zettle/softwares/zuul.md","links":[{"resolvedRelTarget":{"contents":"zettle/continuous-integration","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","continuous-integration"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"Zuul is a [[continuous-integration]] system that features cross-project gating. This is a process that prevents invalid changes from being merged. This keeps the mainline of development open and working for all developers, and only when a change is confirmed to work without disruption it is merged."},"tags":[]},"parentNote":"zettle/softwares.md","title":"Zuul","url":"zettle/softwares/zuul"},"zettle/systemd-nspawn.md":{"filePath":"zettle/systemd-nspawn.md","links":[],"meta":{"page":{"description":"A light system container environment."},"tags":[]},"parentNote":"zettle.md","title":"systemd nspawn","url":"zettle/systemd-nspawn"},"zettle/user-interface.md":{"filePath":"zettle/user-interface.md","links":[{"resolvedRelTarget":{"contents":"zettle/programing-languages/reactjs","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","reactjs"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"A space where interactions between humans and machines occur."},"tags":[]},"parentNote":"zettle.md","title":"User Interface","url":"zettle/user-interface"},"zettle/version-control.md":{"filePath":"zettle/version-control.md","links":[{"resolvedRelTarget":{"contents":"zettle/softwares/git","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","git"],"tag":"URTWikiLink"}}],"meta":{"tags":[]},"parentNote":"zettle.md","title":"Version Control","url":"zettle/version-control"},"zettle/virtual-machine.md":{"filePath":"zettle/virtual-machine.md","links":[],"meta":{"page":{"description":"a formalization of virtual machine interpretersfor dynamically typed programming languages."},"tags":[]},"parentNote":"zettle.md","title":"Virtual Machine","url":"zettle/virtual-machine"},"zettle/vulkan.md":{"filePath":"zettle/vulkan.md","links":[{"resolvedRelTarget":{"contents":"blog/vulkan-triangle-winding","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkBranch","vulkan-triangle-winding"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"Vulkan is a new API by the Khronos group (known for OpenGL) that provides a much better abstraction of modern graphics cards."},"tags":[],"title":"Vulkan"},"parentNote":"zettle.md","title":"Vulkan","url":"zettle/vulkan"},"zettle/zurihac.md":{"filePath":"zettle/zurihac.md","links":[{"resolvedRelTarget":{"contents":"zettle/programing-languages/haskell","tag":"RRTFound"},"unresolvedRelTarget":{"contents":["WikiLinkNormal","haskell"],"tag":"URTWikiLink"}}],"meta":{"page":{"description":"","image":"https://raw.githubusercontent.com/zfoh/zfoh.ch/master/images/zurihac2021/static-logo.svg"},"tags":[]},"parentNote":"zettle.md","title":"ZuriHac","url":"zettle/zurihac"}},"version":1}